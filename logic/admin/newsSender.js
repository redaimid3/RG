const {
    Keyboard
} = require('vk-io')
const keyboards = require('../../addons/keyboards')

module.exports = async function (db, vk, context, limits) {
    if (context.isChat) return
    if (context.messagePayload && context.messagePayload.command == 'getNewsSender') {
        let text = await context.question({
            message: `–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏...`,
            keyboard: Keyboard.builder()
                .textButton({
                    label: '–û—Ç–º–µ–Ω–∞',
                    payload: {
                        command: `mainmenu`
                    },
                    color: 'negative'
                })
        })
        if (text.messagePayload || text.length < 1) return context.send({
            message: `–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞`,
            keyboard: keyboards.main_menu
        })

        let atach = await context.question({
            message: `–ü—Ä–∏–∫—Ä–µ–ø–∏ –≤–ª–æ–∂–µ–Ω–∏—è (—ç—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)`,
        })
        if (atach.messagePayload || atach.length < 1) return context.send({
            message: `–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞`,
            keyboard: keyboards.main_menu
        })

        vk.api.messages.send({
            peer_id: context.senderId,
            random_id: Date.now(),
            message: text.text,
            attachment: atach.text
        })

        let confirm = await context.question({
            message: `–£—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç?`,
            keyboard: Keyboard.builder()
                .textButton({
                    label: `–î–∞`
                }).textButton({
                    label: `–ù–µ—Ç`
                })
        })
        if (confirm.text != "–î–∞") {
            return context.send({
                message: `–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞`,
                keyboard: keyboards.main_menu
            })
        }
        context.send({
            message: `–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞—Ç–∞`,
            keyboard: keyboards.main_menu
        })
let users = 0;
let ct = 0;
        for (i in db.playersData) {
            if (db.playersData[i].userData.globalSettings.allowNewsMessage == true) {
                await vk.api.messages.send({
                    peer_id: db.playersData[i].id,
                    random_id: Date.now(),
                    message: `${text.text}\n\n–û—Ç —Ä–∞—Å—Å—ã–ª–∫–∏ –≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è. –°–¥–µ–ª–∞—Ç—å —Ç—ã —ç—Ç–æ –º–æ–∂–µ—à—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±–æ—Ç–∞`,
                    attachment: atach.text,
                }).catch((err) => {

                })
                users += 1
            }
        }
        for (i in db.gamesData) {
            	await vk.api.messages.send({
                    peer_id: db.gamesData[i].id,
                    random_id: Date.now(),
                    message: `${text.text}\n\n–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ.`,
                    attachment: atach.text,
                }).catch((err) => {

                })
                ct += 1
            }
        return context.send({
            message: `üòé –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${users} —é–∑–µ—Ä–∞–º\n–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ ${ct} –±–µ—Å–µ–¥.`
        })
    }
}